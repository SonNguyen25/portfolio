/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package equipment.management.system;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Bao Son
 */
public class History extends javax.swing.JFrame {
    Connection connection = null;
    ResultSet resultSet;
    PreparedStatement preparedStatement;

    /**
     * Creates new form StatisticScreen
     */
    public History() {
        super("History");
        initComponents();
        connection = JavaConnectionDataBase.connectToDatabase();
        BorrowTable();
        ReturnTable();
        
    }
    
    public void BorrowTable () {
        try {
            if (BorrowListTable.getRowCount() > 0) {
                String SqlBorrowList = "SELECT Borrow.FullName AS \"Full Name\", Borrow.Email AS \"Email\", "
                        + "Equipment.EquipmentName AS \"Equipment Name\", Borrow.DateBorrow AS \"Borrow Date\"\n, Borrow.TimeReturned AS \"Return At\"" +
                                        "FROM Borrow \n" +
                                        "INNER JOIN Equipment ON Borrow.EquipmentID = Equipment.EquipmentID";
                preparedStatement = connection.prepareStatement(SqlBorrowList);
                resultSet = preparedStatement.executeQuery();
                BorrowListTable.setModel(DbUtils.resultSetToTableModel(resultSet));
            }
            else {
                //BorrowListTable.set
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }
    
    public void ReturnTable () {
        try {
            String SqlReturnList = "SELECT [Return].FullName AS \"Full Name\", [Return].Email AS \"Email\", Equipment.EquipmentName AS \"Equipment Name\", [Return].DateOfReturn AS \"Return Date\"\n" +
                                    "FROM [Return] \n" +
                                    "INNER JOIN Equipment ON [Return].EquipmentID = Equipment.EquipmentID";
            preparedStatement = connection.prepareStatement(SqlReturnList);
            resultSet = preparedStatement.executeQuery();
            ReturnListTable.setModel(DbUtils.resultSetToTableModel(resultSet));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ReturnListPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReturnListTable = new javax.swing.JTable();
        BorrowListPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        BorrowListTable = new javax.swing.JTable();
        BorrowEquipementCountButton = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        AlertStudentButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ReturnListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Returned List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(0, 153, 204))); // NOI18N

        ReturnListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student Name", "Equipment Name", "Borrow Date", "Return Date"
            }
        ));
        jScrollPane1.setViewportView(ReturnListTable);

        javax.swing.GroupLayout ReturnListPanelLayout = new javax.swing.GroupLayout(ReturnListPanel);
        ReturnListPanel.setLayout(ReturnListPanelLayout);
        ReturnListPanelLayout.setHorizontalGroup(
            ReturnListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE))
        );
        ReturnListPanelLayout.setVerticalGroup(
            ReturnListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        BorrowListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Borrowed List", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 24), new java.awt.Color(0, 153, 204))); // NOI18N

        BorrowListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Student Name", "Equipment Name", "Borrow Date", "Return Date"
            }
        ));
        jScrollPane2.setViewportView(BorrowListTable);

        BorrowEquipementCountButton.setText("Borrowed Equipment Count");
        BorrowEquipementCountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrowEquipementCountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BorrowListPanelLayout = new javax.swing.GroupLayout(BorrowListPanel);
        BorrowListPanel.setLayout(BorrowListPanelLayout);
        BorrowListPanelLayout.setHorizontalGroup(
            BorrowListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BorrowListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BorrowListPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BorrowEquipementCountButton)
                .addContainerGap())
        );
        BorrowListPanelLayout.setVerticalGroup(
            BorrowListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BorrowListPanelLayout.createSequentialGroup()
                .addComponent(BorrowEquipementCountButton)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back.png"))); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        AlertStudentButton.setText("Alert Student");
        AlertStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AlertStudentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AlertStudentButton)
                    .addComponent(Back)
                    .addComponent(ReturnListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(83, Short.MAX_VALUE)
                    .addComponent(BorrowListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(58, 58, 58)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(331, Short.MAX_VALUE)
                .addComponent(AlertStudentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ReturnListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Back)
                .addGap(16, 16, 16))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(23, 23, 23)
                    .addComponent(BorrowListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(367, Short.MAX_VALUE)))
        );

        setSize(new java.awt.Dimension(969, 732));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        setVisible(false);
        DashBoard dashboard = new DashBoard();
        dashboard.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void AlertStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AlertStudentButtonActionPerformed
       Email email = new Email();
        email.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_AlertStudentButtonActionPerformed

    private void BorrowEquipementCountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrowEquipementCountButtonActionPerformed
        ArrayList<Object> list = new ArrayList<>();
            try {
            if (BorrowListTable.getRowCount() > 0) {
                String SqlBorrowList = "SELECT Borrow.FullName AS \"Full Name\", Borrow.Email AS \"Email\", Equipment.EquipmentName AS \"Equipment Name\", "
                        + "Equipment.Quantity, Borrow.DateBorrow AS \"Borrow Date\"\n" +
                                        "FROM Borrow \n" +
                                        "INNER JOIN Equipment ON Borrow.EquipmentID = Equipment.EquipmentID ORDER BY [Borrow Date] DESC";
                preparedStatement = connection.prepareStatement(SqlBorrowList);
                resultSet = preparedStatement.executeQuery();
                while (resultSet.next()) {
                    list.add(resultSet.getString("Quantity"));
                }
                int sum = 0;
                for (Object var : list) {
                    sum += Integer.parseInt(var.toString());
                }
                JOptionPane.showMessageDialog(rootPane, "Sum of all borrowed equipment: " + sum, "Doing Calculations...", 1);
            }
            else {
                JOptionPane.showMessageDialog(rootPane, "There are no items borrowed", "It's getting lonely in here...", 1);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_BorrowEquipementCountButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(History.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new History().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AlertStudentButton;
    private javax.swing.JButton Back;
    private javax.swing.JButton BorrowEquipementCountButton;
    private javax.swing.JPanel BorrowListPanel;
    private javax.swing.JTable BorrowListTable;
    private javax.swing.JPanel ReturnListPanel;
    private javax.swing.JTable ReturnListTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
